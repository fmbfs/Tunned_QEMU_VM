'\" t
.\"     Title: trace-cmd-start
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 03/31/2022
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "TRACE\-CMD\-START" "1" "03/31/2022" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
trace-cmd-start \- start the Ftrace Linux kernel tracer without recording
.SH "SYNOPSIS"
.sp
\fBtrace\-cmd start\fR [\fIOPTIONS\fR]
.SH "DESCRIPTION"
.sp
The trace\-cmd(1) start enables all the Ftrace tracing the same way trace\-cmd\-record(1) does\&. The difference is that it does not run threads to create a trace\&.dat file\&. This is useful just to enable Ftrace and you are only interested in the trace after some event has occurred and the trace is stopped\&. Then the trace can be read straight from the Ftrace pseudo file system or can be extracted with trace\-cmd\-extract(1)\&.
.SH "OPTIONS"
.sp
The options are the same as \fItrace\-cmd\-record(1)\fR, except that it does not take options specific to recording (\fB\-s\fR, \fB\-o\fR, \fB\-N\fR, and \fB\-t\fR)\&.
.PP
\fB\-\-fork\fR
.RS 4
This option is only available for trace\-cmd start\&. It tells trace\-cmd to not wait for the process to finish before returning\&. With this option, trace\-cmd start will return right after it forks the process on the command line\&. This option only has an effect if trace\-cmd start also executes a command\&.
.RE
.SH "SEE ALSO"
.sp
trace\-cmd(1), trace\-cmd\-record(1), trace\-cmd\-report(1), trace\-cmd\-stop(1), trace\-cmd\-extract(1), trace\-cmd\-reset(1), trace\-cmd\-split(1), trace\-cmd\-list(1), trace\-cmd\-listen(1)
.SH "AUTHOR"
.sp
Written by Steven Rostedt, <\m[blue]\fBrostedt@goodmis\&.org\fR\m[]\&\s-2\u[1]\d\s+2>
.SH "RESOURCES"
.sp
\m[blue]\fBhttps://git\&.kernel\&.org/pub/scm/utils/trace\-cmd/trace\-cmd\&.git/\fR\m[]
.SH "COPYING"
.sp
Copyright (C) 2010 Red Hat, Inc\&. Free use of this software is granted under the terms of the GNU Public License (GPL)\&.
.SH "NOTES"
.IP " 1." 4
rostedt@goodmis.org
.RS 4
\%mailto:rostedt@goodmis.org
.RE
